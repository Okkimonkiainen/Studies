
package urheilupaivakirja;

import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author Ella Rauma ja Tiina Tuomisto
 * Harjoitustyö: Urheilupäiväkirja
 * Versio: 1
 * 23.11.2020
 */
public class Paivakirja extends javax.swing.JFrame {

    /**
     * Creates new form Paivakirja
     */
    public Paivakirja() {
        initComponents();
        btnTulosta.setEnabled(false);
        btnMuokkaa.setEnabled(false);
        btnPoista.setEnabled(false);
        btnHae.setEnabled(false);
        cmbHaku.setEnabled(false);
    }


    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblKayttaja = new javax.swing.JLabel();
        lblNimi = new javax.swing.JLabel();
        lblIka = new javax.swing.JLabel();
        lblPituus = new javax.swing.JLabel();
        lblPaino = new javax.swing.JLabel();
        lblPaikkaAika = new javax.swing.JLabel();
        lblPaikka = new javax.swing.JLabel();
        lblPvm = new javax.swing.JLabel();
        lblLaji = new javax.swing.JLabel();
        cmbLaji = new javax.swing.JComboBox<>();
        lblKesto = new javax.swing.JLabel();
        txtNimi = new javax.swing.JTextField();
        txtIka = new javax.swing.JTextField();
        txtPituus = new javax.swing.JTextField();
        txtPaino = new javax.swing.JTextField();
        txtPaikka = new javax.swing.JTextField();
        txtPvm = new javax.swing.JTextField();
        txtKesto = new javax.swing.JTextField();
        btnTallenna = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        btnPoista = new javax.swing.JButton();
        btnTulosta = new javax.swing.JButton();
        lstPaivakirja = new java.awt.List();
        btnMuokkaa = new javax.swing.JButton();
        lblHaku = new javax.swing.JLabel();
        cmbHaku = new javax.swing.JComboBox<>();
        btnHae = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblKayttaja.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblKayttaja.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblKayttaja.setText("Käyttäjä");
        lblKayttaja.setToolTipText("");
        lblKayttaja.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lblKayttaja.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        lblNimi.setText("Nimi");

        lblIka.setText("Ikä");

        lblPituus.setText("Pituus");

        lblPaino.setText("Paino");

        lblPaikkaAika.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblPaikkaAika.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPaikkaAika.setText("Paikka ja aika");
        lblPaikkaAika.setToolTipText("");
        lblPaikkaAika.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lblPaikkaAika.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        lblPaikka.setText("Paikka");

        lblPvm.setText("Päivämäärä");

        lblLaji.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblLaji.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblLaji.setText("Laji");
        lblLaji.setToolTipText("");
        lblLaji.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lblLaji.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        cmbLaji.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Jalkapallo", "Juoksu", "Koripallo", "Kävely", "Pyöräily", "Sulkapallo", "Tennis", "Uinti", "Muu" }));

        lblKesto.setText("Kesto");

        btnTallenna.setText("Tallenna");
        btnTallenna.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTallennaActionPerformed(evt);
            }
        });

        btnPoista.setText("Poista");
        btnPoista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPoistaActionPerformed(evt);
            }
        });

        btnTulosta.setLabel("Tulosta");
        btnTulosta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTulostaActionPerformed(evt);
            }
        });

        btnMuokkaa.setText("Muokkaa");
        btnMuokkaa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMuokkaaActionPerformed(evt);
            }
        });

        lblHaku.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblHaku.setText("Hae suorituksia lajin mukaan");
        lblHaku.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        cmbHaku.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Jalkapallo", "Juoksu", "Koripallo", "Kävely", "Pyöräily", "Sulkapallo", "Tennis", "Uinti", "Muu" }));

        btnHae.setText("Hae");
        btnHae.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHaeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblPituus)
                            .addComponent(lblPaino)
                            .addComponent(lblNimi)
                            .addComponent(lblIka))
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtPituus, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtIka, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtNimi, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE)
                            .addComponent(txtPaino)))
                    .addComponent(lblKayttaja, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblLaji, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbLaji, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(65, 65, 65))
            .addComponent(jSeparator1)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lstPaivakirja, javax.swing.GroupLayout.PREFERRED_SIZE, 514, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnTulosta)
                                .addGap(169, 169, 169)
                                .addComponent(btnMuokkaa)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnPoista)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblHaku))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(52, 52, 52)
                                .addComponent(cmbHaku, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnHae)
                                .addGap(47, 47, 47))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(265, 265, 265)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblPaikka)
                                    .addComponent(lblPvm)
                                    .addComponent(lblKesto))
                                .addGap(15, 15, 15)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtPaikka, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtPvm, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtKesto, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(lblPaikkaAika, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnTallenna))))
                .addContainerGap(13, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblKayttaja)
                    .addComponent(lblPaikkaAika)
                    .addComponent(lblLaji))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPaikka, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPaikka)
                    .addComponent(txtNimi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNimi)
                    .addComponent(cmbLaji, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPvm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPvm)
                    .addComponent(txtIka, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblIka))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblKesto)
                            .addComponent(txtKesto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblPituus)
                            .addComponent(txtPituus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtPaino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblPaino))))
                .addGap(29, 29, 29)
                .addComponent(btnTallenna)
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnTulosta)
                    .addComponent(btnPoista)
                    .addComponent(btnMuokkaa))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lstPaivakirja, javax.swing.GroupLayout.DEFAULT_SIZE, 127, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(lblHaku)
                        .addGap(18, 18, 18)
                        .addComponent(cmbHaku, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnHae)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    Aika a;
    Kayttaja k;
    Laji l;
    Paikka p;
    Suoritus s;
    Tietokanta t = new Tietokanta();
    private void btnTallennaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTallennaActionPerformed

        /*Tarkistetaan, halutaanko muokata vai syöttää uusi tieto
         ja samalla, että kentätä eivät ole tyhjiä. Luetaan syötetyt tiedot ja tallennetaan listaan*/
        if (muokattu == true) { 
            if (!txtIka.getText().isEmpty() && !txtKesto.getText().isEmpty() && !txtNimi.getText().isEmpty() && !txtPaikka.getText().isEmpty() && !txtPaino.getText().isEmpty() && !txtPituus.getText().isEmpty() && !txtPvm.getText().isEmpty()) {
                Tietokanta t2 = new Tietokanta();
                int i = lstPaivakirja.getSelectedIndex(); //Suoritus, joka valittu muokattavaksi
                
                try { 
                    k = new Kayttaja();
                    k.nimi = txtNimi.getText();

                    k.ika = Integer.parseInt(txtIka.getText());
                    k.paino = Double.parseDouble(txtPaino.getText());
                    k.pituus = Double.parseDouble(txtPituus.getText());

                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(this, "Ikä, paino ja pituus tulee syöttää numeroina!");
                    
                }

                l = new Laji();
                l.nimi = cmbLaji.getSelectedItem().toString();
                p = new Paikka();
                p.kaupunki = txtPaikka.getText();

                a = new Aika();
                a.pvm = txtPvm.getText();
                a.kesto = txtKesto.getText();

                t.poistaSuoritus(valittu); //Poistetaan valittu suoritus listasta
                t2.lisaaSuoritus(k, a, l, p); 
                t.suoritukset.add(i, t2.suoritukset.get(0)); //Listan Valittuun paikkaan lisätään muokattu suorius  
                muokattu = false;
                 
            } else {
                JOptionPane.showMessageDialog(this, "Kentät eivät voi olla tyhjiä!\n" + "Valitse muokattava merkintä uudestaan");
                muokattu = false;
                lstPaivakirja.deselect(valittu);
            }
          
        } else {

            if (!txtIka.getText().isEmpty() && !txtKesto.getText().isEmpty() && !txtNimi.getText().isEmpty() && !txtPaikka.getText().isEmpty() && !txtPaino.getText().isEmpty() && !txtPituus.getText().isEmpty() && !txtPvm.getText().isEmpty()) {
                k = new Kayttaja();

                try {
                    k.ika = Integer.parseInt(txtIka.getText());
                    k.paino = Double.parseDouble(txtPaino.getText());
                    k.pituus = Double.parseDouble(txtPituus.getText());
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(this, "Ikä, paino ja pituus tulee syöttää numeroina!");
                    return;
                }

                k.nimi = txtNimi.getText();
                p = new Paikka();
                p.kaupunki = txtPaikka.getText();

                a = new Aika();
                a.pvm = txtPvm.getText();
                a.kesto = txtKesto.getText();

                l = new Laji();
                l.nimi = cmbLaji.getSelectedItem().toString();
                
                t.lisaaSuoritus(k, a, l, p);
                

            } else {
                JOptionPane.showMessageDialog(this, "Kentät eivät voi olla tyhjiä!");
            }
            
            //Jos lista ei ole tyhjä, aktivoidaan Tulosta-nappi
            if (t.suoritukset.size() != 0) {
                btnTulosta.setEnabled(true);
            }

        }

        //Kenttin tyhjennys ja alustus seuraavaa tiedon syöttökertaa varten
        txtNimi.setText("");
        txtIka.setText("");
        txtPaino.setText("");
        txtPituus.setText("");
        txtKesto.setText("");
        txtPaikka.setText("");
        txtPvm.setText("");
        cmbLaji.setSelectedItem("Jalkapallo");
    }//GEN-LAST:event_btnTallennaActionPerformed

    
    private void btnTulostaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTulostaActionPerformed
        lstPaivakirja.removeAll(); //Tyhjennetään päiväkirjan tulostuskenttä ennen seuraavaa tulostusta
        
        //Tulostetaan päiväkirjan kaikki suoritukset
        for (Suoritus s : t.suoritukset) {
            lstPaivakirja.add(s.toString());
        }

        //Jos on tulostettu suorituksia, niitä voidaan muokata, poistaa ja hakea
        if (lstPaivakirja.getItemCount() != 0) {
            btnMuokkaa.setEnabled(true);
            btnPoista.setEnabled(true);
            btnHae.setEnabled(true);
            cmbHaku.setEnabled(true);
        }
    }//GEN-LAST:event_btnTulostaActionPerformed

    private void btnPoistaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPoistaActionPerformed
       
    //Jos suorituksia on tulostettu, voidaan poistaa valittu suoritus listasta ja tulostetuista suorituksista
        try {
            if (lstPaivakirja.getItemCount() != 0) {
                int valittu = lstPaivakirja.getSelectedIndex();
                lstPaivakirja.remove(valittu);
                t.poistaSuoritus(valittu);
                
                //Jos suorituksia ei ole, ei voida poistaa, muokata tai hakea suorituksia
                if (lstPaivakirja.getItemCount() == 0) {
                    btnPoista.setEnabled(false);
                    btnMuokkaa.setEnabled(false);
                    btnHae.setEnabled(false);
                    cmbHaku.setEnabled(false);
                }
            }
            
            /*Jos käyttäjä haluaakin muokkauksen sijaan poistaa suorituksen,
            ja jotta suorituksen tiedot eivät jäisi tekstikenttiin
            tyhjennetään ja alustetaan kentät takaisin tiedon syöttöä tai muokkausta varten
            */
            txtNimi.setText("");
            txtIka.setText("");
            txtPaino.setText("");
            txtPituus.setText("");
            txtKesto.setText("");
            txtPaikka.setText("");
            txtPvm.setText("");
            cmbLaji.setSelectedItem("Jalkapallo");

            muokattu = false;

            //Ei voida tulostaa tietoja, jos listassa ei ole suorituksia
            if (t.suoritukset.size() == 0) {
                btnTulosta.setEnabled(false);
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Valitse poistettava merkintä!");
        }

    }//GEN-LAST:event_btnPoistaActionPerformed

    boolean muokattu;
    int valittu;
     ArrayList<Suoritus> suor;
    private void btnMuokkaaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMuokkaaActionPerformed
        
        //Valitaan muokattava suoritus ja syötetään sen tiedot kenttiin, muokkauksen helpottamiseksi
        try {            
            valittu = lstPaivakirja.getSelectedIndex();
            Suoritus s2 = new Suoritus();
            muokattu = true;
            
            s2 = t.etsiSuoritus(valittu); //Etsitään listasta valittu suoritus

            //Asetetaan suorituksen tiedot kenttiin
            txtNimi.setText(s2.kayttaja.nimi);
            String ika = Integer.toString(s2.kayttaja.ika);
            txtIka.setText(ika);
            String pituus = Double.toString(s2.kayttaja.pituus);
            txtPituus.setText(pituus);
            String paino = Double.toString(s2.kayttaja.paino);
            txtPaino.setText(paino);

            txtPaikka.setText(s2.paikka.kaupunki);
            txtPvm.setText(s2.aika.pvm);
            txtKesto.setText(s2.aika.kesto);

            cmbLaji.setSelectedItem(s2.laji.nimi);
            
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Valitse muokattava merkintä!");
        }
    }//GEN-LAST:event_btnMuokkaaActionPerformed

   
    private void btnHaeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHaeActionPerformed
        
    //Jos lista ei ole tyhjä, voidaan etsiä lajinimen mukaan suorituksia
    //Ei voida poistaa tai muokata haettuja suorituksia
        
        if(t.suoritukset.size()!=0){
            lstPaivakirja.removeAll(); //Tyhjennetään tulostuskenttä hakutuloksia varten
        for (Suoritus s3 : t.suoritukset) {
            if(s3.laji.nimi.equalsIgnoreCase(cmbHaku.getSelectedItem().toString())){
            lstPaivakirja.add(s3.toString());
            }
        }
            btnPoista.setEnabled(false);
            btnMuokkaa.setEnabled(false);
        }
    }//GEN-LAST:event_btnHaeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Paivakirja.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Paivakirja.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Paivakirja.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Paivakirja.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Paivakirja().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnHae;
    private javax.swing.JButton btnMuokkaa;
    private javax.swing.JButton btnPoista;
    private javax.swing.JButton btnTallenna;
    private javax.swing.JButton btnTulosta;
    private javax.swing.JComboBox<String> cmbHaku;
    private javax.swing.JComboBox<String> cmbLaji;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblHaku;
    private javax.swing.JLabel lblIka;
    private javax.swing.JLabel lblKayttaja;
    private javax.swing.JLabel lblKesto;
    private javax.swing.JLabel lblLaji;
    private javax.swing.JLabel lblNimi;
    private javax.swing.JLabel lblPaikka;
    private javax.swing.JLabel lblPaikkaAika;
    private javax.swing.JLabel lblPaino;
    private javax.swing.JLabel lblPituus;
    private javax.swing.JLabel lblPvm;
    private java.awt.List lstPaivakirja;
    private javax.swing.JTextField txtIka;
    private javax.swing.JTextField txtKesto;
    private javax.swing.JTextField txtNimi;
    private javax.swing.JTextField txtPaikka;
    private javax.swing.JTextField txtPaino;
    private javax.swing.JTextField txtPituus;
    private javax.swing.JTextField txtPvm;
    // End of variables declaration//GEN-END:variables
}
